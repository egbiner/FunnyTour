<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.imhtb.dao.EssayOpMapper">
  <resultMap id="BaseResultMap" type="cn.imhtb.pojo.EssayOp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="essay_op" jdbcType="INTEGER" property="essayOp" />
    <result column="essay_id" jdbcType="INTEGER" property="essayId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ip, user_id, essay_op, essay_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tmt_essayop
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectHotLeapList" resultType="cn.imhtb.vo.HotEssayVo" parameterType="map">
    select count(*) number,essay_id,essay_op,DATE_FORMAT(create_time,'%Y-%m-%d') create_time
     from tmt_essayop
      where essay_op = #{essayOp} and essay_id = #{essayId} and DATE_FORMAT(create_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
      GROUP BY essay_id,essay_op,DATE_FORMAT(create_time,'%Y-%m-%d')
    </select>
  <select id="selectHotLeapEssayIdByOp" resultType="java.lang.Integer" parameterType="map">
    select essay_id from tmt_essayop
    where essay_op = #{essayOp} and DATE_FORMAT(create_time,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
     GROUP BY essay_id,essay_op
     ORDER BY count(*) DESC LIMIT 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tmt_essayop
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.imhtb.pojo.EssayOp">
    insert into tmt_essayop (id, ip, user_id, 
      essay_op, essay_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{essayOp,jdbcType=INTEGER}, #{essayId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.imhtb.pojo.EssayOp">
    insert into tmt_essayop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="essayOp != null">
        essay_op,
      </if>
      <if test="essayId != null">
        essay_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="essayOp != null">
        #{essayOp,jdbcType=INTEGER},
      </if>
      <if test="essayId != null">
        #{essayId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.imhtb.pojo.EssayOp">
    update tmt_essayop
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="essayOp != null">
        essay_op = #{essayOp,jdbcType=INTEGER},
      </if>
      <if test="essayId != null">
        essay_id = #{essayId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.imhtb.pojo.EssayOp">
    update tmt_essayop
    set ip = #{ip,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      essay_op = #{essayOp,jdbcType=INTEGER},
      essay_id = #{essayId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>